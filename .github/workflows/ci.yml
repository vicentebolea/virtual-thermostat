name: CI

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8
          pip install -e .

      - name: Check formatting with Black
        run: black --check --diff virtual_thermostat

      - name: Lint with flake8
        run: flake8 virtual_thermostat

  actionlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install actionlint
        run: |
          # Download and install actionlint
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          echo "${PWD}" >> "$GITHUB_PATH"

      - name: Run actionlint
        run: actionlint

  smoke-test:
    name: Smoke Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    needs: [lint, actionlint]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.10", "3.12"]

    container:
      image: python:${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -e .

      - name: Run smoke tests
        run: |
          pytest tests/test_smoke.py -v

  build-and-push:
    runs-on: ubuntu-latest
    needs: [smoke-test, lint, actionlint]
    permissions:
      contents: read
      packages: write
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Get short SHA
        id: slug
        run: echo "SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)" >> "$GITHUB_OUTPUT"

      - name: Build and push container image
        run: |
          # Build the image
          podman build -t ghcr.io/${{ github.repository }}/virtual-thermostat:latest \
                       -t ghcr.io/${{ github.repository }}/virtual-thermostat:${{ github.sha }} \
                       -t ghcr.io/${{ github.repository }}/virtual-thermostat:${{ steps.slug.outputs.SHORT_SHA }} \
                       -f ./virtual-thermostat.dockerfile .

          # Push all tags
          podman push ghcr.io/${{ github.repository }}/virtual-thermostat:latest
          podman push ghcr.io/${{ github.repository }}/virtual-thermostat:${{ github.sha }}
          podman push ghcr.io/${{ github.repository }}/virtual-thermostat:${{ steps.slug.outputs.SHORT_SHA }}
